{
  "_args": [
    [
      {
        "raw": "little-loader@~0.1.0",
        "scope": null,
        "escapedName": "little-loader",
        "name": "little-loader",
        "rawSpec": "~0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "/Users/malcolmross/Desktop/Full Sail/Project & Portfolio V_WDD/ThingsToDo/node_modules/react-google-maps-loader"
    ]
  ],
  "_from": "little-loader@>=0.1.0 <0.2.0",
  "_id": "little-loader@0.1.1",
  "_inCache": true,
  "_location": "/little-loader",
  "_nodeVersion": "0.10.40",
  "_npmUser": {
    "name": "ryan.roemer",
    "email": "ryan@loose-bits.com"
  },
  "_npmVersion": "2.13.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "little-loader@~0.1.0",
    "scope": null,
    "escapedName": "little-loader",
    "name": "little-loader",
    "rawSpec": "~0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-google-maps-loader"
  ],
  "_resolved": "https://registry.npmjs.org/little-loader/-/little-loader-0.1.1.tgz",
  "_shasum": "516207701524e795feafa8e64cfc6881af39503f",
  "_shrinkwrap": null,
  "_spec": "little-loader@~0.1.0",
  "_where": "/Users/malcolmross/Desktop/Full Sail/Project & Portfolio V_WDD/ThingsToDo/node_modules/react-google-maps-loader",
  "bugs": {
    "url": "https://github.com/walmartlabs/little-loader/issues"
  },
  "contributors": [
    {
      "name": "Brian Beck",
      "email": "brian.beck@formidable.com"
    },
    {
      "name": "Ryan Roemer",
      "email": "ryan.roemer@formidable.com"
    }
  ],
  "dependencies": {},
  "description": "A lightweight, IE8+ JavaScript loader.",
  "devDependencies": {
    "builder": "^2.3.1",
    "chai": "^3.4.1",
    "coveralls": "^2.11.4",
    "eslint": "^1.10.1",
    "eslint-config-defaults": "^7.1.1",
    "eslint-plugin-filenames": "^0.2.0",
    "guacamole": "^1.1.4",
    "http-server": "^0.8.5",
    "istanbul": "^0.4.0",
    "istanbul-instrumenter-loader": "^0.1.3",
    "karma": "^0.13.15",
    "karma-chrome-launcher": "^0.2.2",
    "karma-coverage": "^0.5.3",
    "karma-firefox-launcher": "^0.1.7",
    "karma-ie-launcher": "^0.2.0",
    "karma-mocha": "^0.2.1",
    "karma-phantomjs-launcher": "^0.2.1",
    "karma-phantomjs-shim": "^1.1.2",
    "karma-requirejs": "^0.2.2",
    "karma-safari-launcher": "^0.1.1",
    "karma-sauce-launcher": "^0.3.0",
    "karma-spec-reporter": "0.0.23",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.3.4",
    "node-uuid": "^1.4.7",
    "phantomjs": "^1.9.18",
    "requirejs": "^2.1.22",
    "rimraf": "^2.4.4",
    "rowdy": "^0.3.5",
    "sauce-connect-launcher": "^0.13.0",
    "saucelabs": "^1.0.1",
    "selenium-standalone": "4.7.2",
    "server-destroy": "^1.0.1",
    "uglify-js": "^2.6.1",
    "webdriverio": "^3.2.6",
    "webpack": "^1.12.9"
  },
  "directories": {},
  "dist": {
    "shasum": "516207701524e795feafa8e64cfc6881af39503f",
    "tarball": "https://registry.npmjs.org/little-loader/-/little-loader-0.1.1.tgz"
  },
  "gitHead": "f845d8fb4dbe085e2ef83f7fb34c1413cc3f1a0c",
  "homepage": "https://github.com/walmartlabs/little-loader#readme",
  "license": "MIT",
  "main": "lib/little-loader.js",
  "maintainers": [
    {
      "name": "ryan.roemer",
      "email": "ryan@loose-bits.com"
    }
  ],
  "name": "little-loader",
  "optionalDependencies": {},
  "readme": "Little Loader\n=============\n\nA lightweight, IE8+ JavaScript loader that is **actually tested**...\n\n[![Travis Status][trav_img]][trav_site]\n[![Coverage Status][cov_img]][cov_site]\n![size](http://badges.herokuapp.com/size/npm/little-loader/dist/little-loader.min.js)\n![size (gz)](http://badges.herokuapp.com/size/npm/little-loader/dist/little-loader.min.js?gzip=true&label=size%20(gz))\n\n[![Sauce Test Status][sauce_img]][sauce_site]\n\n... with a very narrow set of objectives:\n\n* **Tested** all the way down to IE8\n* Reliably **calls back** after script loads\n* Captures script load **errors** down to IE8\n* Really, really **small** (clocking in at `~474` minified + gzipped bytes)\n* ... and **that's it**!\n\nWe currently test:\n\n* Karma - _Travis_: PhantomJS, Firefox\n* Selenium - _Travis_: PhantomJS, Firefox\n* Selenium - _Sauce Labs_:\n    * Windows: Firefox, Chrome, IE8-11\n    * Mac: Safari\n\n### Usage\n\nAlone, little loader attaches to `window._lload` for loading your Javascript:\n\n```html\n<script>\n  window._lload(\"http://example.com/foo.js\", function (err) {\n    // `err` is script load error.\n    // otherwise, foo.js is loaded!\n  }/*, [optional context (`this`) variable here] */);\n</script>\n```\n\nIf you use an AMD bundling tool (like RequireJS):\n\n```js\ndefine([\"little-loader\"], function (load) {\n  load(\"http://example.com/foo.js\", function (err) {\n    // ... your code ...\n  });\n});\n```\n\nIf you use a CommonJS bundling tool (like Webpack):\n\n```js\nvar load = require(\"little-loader\");\n\nload(\"http://example.com/foo.js\", function (err) {\n  // ... your code ...\n});\n```\n\n### Installation\n\n#### CDN\n\nFor the ready-to-use version from CDN, use\n\n```html\n<!-- Minified, production version -->\n<script src=\"https://npmcdn.com/little-loader@VERSION/dist/little-loader.min.js\"></script>\n<!-- Development version -->\n<script src=\"https://npmcdn.com/little-loader@VERSION/lib/little-loader.js\"></script>\n```\n\n#### NPM\n\nTo include `little-loader` as part of your own build, first install from `npm`:\n\n```\n$ npm install --save little-loader\n```\n\nThe library has a UMD wrapper and should work like any other AMD or CommonJS\nmodule with your favorite bundling tool (Webpack, RequireJS, etc.).\n\nIf you do not use a CommonJS or AMD loader tool, then little loader will be\nexposed as the `window._lload` variable.\n\n### Development\n\nDevelopment requires two installation steps:\n\n```sh\n$ npm install\n$ npm run install-dev\n```\n\nAfter that, run the full lint + tests:\n\n```sh\n$ npm run check\n```\n\nYou can try out the live functional tests fixtures with our static server:\n\n```sh\n$ npm run server\n```\n\nand navigate to: http://127.0.0.1:3001/test/func/fixtures/\n\n### Tests\n\nWe run both Karma (client-side) and Selenium (functional) tests.\n\nThe **Karma** tests are faster and more flexible, but slightly \"off\" from\nreal-world use because of their execution environment. We use Karma tests to\nkick the tires on our AMD and CommonJS abstractions and little, one-off use\ncase scenarios.\n\nThe **Selenium** tests are slower and klunky, but they are the \"real deal\"\nexecuting `little-loader` in exactly the same manner as would be used on a\nreal web page. We use Selenium to test a core set of fundamental use cases\nacross all browsers in our matrix.\n\n#### Parallel Local Tests\n\nOur CI is setup with a specific optimized parallel workflow. To run parallel\nfunctional tests in development, here are some helper tasks...\n\n**Local Browsers**\n\n```sh\n$ TEST_PARALLEL=true \\\n  builder envs test-func-local \\\n  --setup=setup-local \\\n  --buffer \\\n  '[ { \"TEST_FUNC_PORT\": 3030, \"ROWDY_SETTINGS\":\"local.phantomjs\" },\n     { \"TEST_FUNC_PORT\": 3040, \"ROWDY_SETTINGS\":\"local.firefox\" },\n     { \"TEST_FUNC_PORT\": 3050, \"ROWDY_SETTINGS\":\"local.chrome\" }\n   ]'\n```\n\nThe `TEST_PARALLEL` flag indicates to not do in-test setup which would conflict\nwith other test processes. We also rely on setting `TEST_FUNC_PORT` specifically\nto non-conflicting ports with at least 3 ports total from the starting number\nfor the two separate static servers we run during tests.\n\n**Sauce Labs**\n\nTo run Sauce Labs tests in parallel from a local machine, you'll need the `sc`\nbinary, which can be force installed with:\n\n```sh\n$ SAUCE_CONNECT_DOWNLOAD_ON_INSTALL=true npm install sauce-connect-launcher\n```\n\nAfter this, the module is available at:\n`node_modules/sauce-connect-launcher/sc/*/bin/sc`\n\nFrom there, you can invoke our helper local commands:\n\n```sh\n$ TEST_PARALLEL=true \\\n  SAUCE_USERNAME=<INSERT_USERNAME> \\\n  SAUCE_ACCESS_KEY=<INSERT_ACCESS_KEY> \\\n  builder envs test-func-sauce \\\n  --setup=setup-sauce \\\n  --buffer \\\n  '[ { \"TEST_FUNC_PORT\": 3030, \"ROWDY_SETTINGS\":\"sauceLabs.IE_8_Windows_2008_Desktop\" },\n     { \"TEST_FUNC_PORT\": 3040, \"ROWDY_SETTINGS\":\"sauceLabs.IE_9_Windows_2008_Desktop\" },\n     { \"TEST_FUNC_PORT\": 3050, \"ROWDY_SETTINGS\":\"sauceLabs.IE_10_Windows_2012_Desktop\" }\n   ]'\n```\n\n\n### Releases\n\n**IMPORTANT - NPM**: To correctly run `preversion` your first step is to make\nsure that you have a very modern `npm` binary:\n\n```sh\n$ npm install -g npm\n```\n\nFirst, you can optionally edit and commit the project history.\n\n```sh\n$ vim HISTORY.md\n$ git add HISTORY.md\n$ git commit -m \"Update history for VERSION\"\n```\n\nNow we're ready to publish. Choose a semantic update for the new version.\nIf you're unsure, read about semantic versioning at http://semver.org/\n\n```sh\n$ npm version VERSION|major|minor|patch -m \"Version %s - INSERT_REASONS\"\n```\n\nNow `postversion` will push to git and publish to NPM.\n\n[trav_img]: https://api.travis-ci.org/walmartlabs/little-loader.svg\n[trav_site]: https://travis-ci.org/walmartlabs/little-loader\n[sauce]: https://saucelabs.com\n[sauce_img]: http://badges.herokuapp.com/sauce/wml-little-loader\n<!--[sauce_img]: https://saucelabs.com/browser-matrix/wml-little-loader.svg-->\n[sauce_site]: https://saucelabs.com/u/wml-little-loader\n[cov]: https://coveralls.io\n[cov_img]: https://img.shields.io/coveralls/walmartlabs/little-loader.svg\n[cov_site]: https://coveralls.io/r/walmartlabs/little-loader\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/walmartlabs/little-loader.git"
  },
  "scripts": {
    "build": "rimraf dist && mkdir dist && uglifyjs lib/little-loader.js --stats --compress --mangle --output=dist/little-loader.min.js",
    "check": "builder run lint && builder run test",
    "check-ci": "builder run lint && builder run test-ci",
    "clean-cov": "rimraf coverage/func",
    "cov-report-func": "istanbul report --config .istanbul.func.yml --include 'coverage/func/data/coverage-*.json'",
    "install-dev": "selenium-standalone install",
    "lint": "builder concurrent lint-client lint-client-test lint-server lint-server-test",
    "lint-client": "eslint -c .eslintrc-client lib test/func/fixtures",
    "lint-client-test": "eslint -c .eslintrc-client-test test/client/*/spec test/client/*/main.js",
    "lint-server": "eslint -c .eslintrc-server *.js",
    "lint-server-test": "eslint -c .eslintrc-server-test test/func/*.js test/func/spec",
    "postversion": "git push && git push --tags && npm publish",
    "preversion": "builder run check",
    "server": "http-server -p 3001 .",
    "setup-local": "builder run setup-local-selenium",
    "setup-local-selenium": "selenium-standalone start >/dev/null 2>&1",
    "setup-sauce": "builder run setup-sauce-connect",
    "setup-sauce-connect": "node_modules/sauce-connect-launcher/sc/*/bin/sc",
    "test": "builder run test-client && builder run test-func",
    "test-ci": "builder concurrent --buffer test-client-ci test-func-ci",
    "test-client": "builder concurrent --buffer test-client-rjs test-client-wp",
    "test-client-ci": "builder concurrent --buffer test-client-rjs-ci test-client-wp-ci",
    "test-client-cov": "builder concurrent --buffer test-client-rjs-cov test-client-wp-cov",
    "test-client-rjs": "karma start test/client/requirejs/karma.conf.js",
    "test-client-rjs-ci": "karma start --browsers PhantomJS,Firefox test/client/requirejs/karma.conf.coverage.js",
    "test-client-rjs-cov": "karma start test/client/requirejs/karma.conf.coverage.js",
    "test-client-wp": "karma start test/client/webpack/karma.conf.js",
    "test-client-wp-ci": "karma start --browsers PhantomJS,Firefox test/client/webpack/karma.conf.coverage.js",
    "test-client-wp-cov": "karma start test/client/webpack/karma.conf.coverage.js",
    "test-func": "mocha --color --opts test/func/mocha.opts test/func/spec/",
    "test-func-ci": "builder run test-func-cov",
    "test-func-cov": "mocha --color --opts test/func/mocha-cov.opts test/func/spec/",
    "test-func-local": "sleep 5 && echo \"Starting ${ROWDY_SETTINGS}\" && builder run test-func-cov",
    "test-func-sauce": "sleep 20 && echo \"Starting ${ROWDY_SETTINGS}\" && builder run test-func-cov",
    "version": "builder run build"
  },
  "version": "0.1.1"
}
